version: '3.8'

services:
  # Actual Budget Server
  actual-server:
    image: docker.io/actualbudget/actual-server:latest
    container_name: actual-server
    ports:
      - "${ACTUAL_PORT:-5006}:5006"
    environment:
      - NODE_ENV=production
      - ACTUAL_PORT=${ACTUAL_PORT:-5006}
      - ACTUAL_UPLOAD_FILE_SYNC_SIZE_LIMIT_MB=${ACTUAL_UPLOAD_FILE_SYNC_SIZE_LIMIT_MB:-20}
      - ACTUAL_UPLOAD_SYNC_ENCRYPTED_FILE_SYNC_SIZE_LIMIT_MB=${ACTUAL_UPLOAD_SYNC_ENCRYPTED_FILE_SYNC_SIZE_LIMIT_MB:-50}
      - ACTUAL_UPLOAD_FILE_SIZE_LIMIT_MB=${ACTUAL_UPLOAD_FILE_SIZE_LIMIT_MB:-20}
    volumes:
      - ${ACTUAL_DATA_DIR:-./data/actual}:/data
    healthcheck:
      test: ['CMD-SHELL', 'node src/scripts/health-check.js']
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    networks:
      - actual-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.actual.rule=Host(`actual.local`)"
      - "traefik.http.routers.actual.entrypoints=web"
      - "traefik.http.services.actual.loadbalancer.server.port=5006"

  # Traefik Reverse Proxy
  traefik:
    image: traefik:v2.10
    container_name: traefik
    ports:
      - "80:80"
      - "8080:8080"  # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/traefik:/etc/traefik
      - ./data/traefik:/data
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL:-admin@example.com}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/data/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
    restart: unless-stopped
    networks:
      - actual-network
    depends_on:
      - actual-server

  # Watchtower for automatic updates
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_SCHEDULE=0 0 2 * * *  # Daily at 2 AM
      - WATCHTOWER_NOTIFICATIONS=email
      - WATCHTOWER_NOTIFICATION_EMAIL_FROM=${WATCHTOWER_EMAIL_FROM:-watchtower@example.com}
      - WATCHTOWER_NOTIFICATION_EMAIL_TO=${WATCHTOWER_EMAIL_TO:-admin@example.com}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=${WATCHTOWER_EMAIL_SERVER:-smtp.gmail.com}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=${WATCHTOWER_EMAIL_SERVER_PORT:-587}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=${WATCHTOWER_EMAIL_SERVER_USER}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=${WATCHTOWER_EMAIL_SERVER_PASSWORD}
    restart: unless-stopped
    networks:
      - actual-network

  # Portainer for Docker management (optional)
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/portainer:/data
    restart: unless-stopped
    networks:
      - actual-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.local`)"
      - "traefik.http.routers.portainer.entrypoints=web"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"

  # Example: Add other applications here
  # nginx-example:
  #   image: nginx:alpine
  #   container_name: nginx-example
  #   ports:
  #     - "8081:80"
  #   volumes:
  #     - ./data/nginx:/usr/share/nginx/html
  #   restart: unless-stopped
  #   networks:
  #     - actual-network
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.nginx.rule=Host(`nginx.local`)"
  #     - "traefik.http.routers.nginx.entrypoints=web"
  #     - "traefik.http.services.nginx.loadbalancer.server.port=80"

networks:
  actual-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 